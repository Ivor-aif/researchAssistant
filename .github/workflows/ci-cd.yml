name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install Frontend Dependencies
      run: npm ci

    - name: Install Backend Dependencies
      run: |
        cd backend
        pip install -r requirements.txt

    - name: Run Frontend Tests
      run: |
        npm run test:coverage
        npm run lint

    - name: Run Backend Tests
      run: |
        cd backend
        pytest tests/ --cov=src --cov-report=xml

    - name: Upload Coverage Reports
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage/coverage-final.json,./backend/coverage.xml

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install Dependencies
      run: npm ci

    - name: Build Frontend
      run: npm run build

    - name: Build Backend Docker Image
      run: |
        cd backend
        docker build -t research-assistant-api .

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Push Docker Image
      run: |
        docker tag research-assistant-api ${{ secrets.DOCKER_HUB_USERNAME }}/research-assistant-api:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/research-assistant-api:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Deploy to Production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          cd /opt/research-assistant
          docker-compose pull
          docker-compose up -d